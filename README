设计思路
采集图片和数据

由nginx反向代理tcp连接;redis以生产者和消费者模式运行;多个异步tcp服务器(tcp_server.py)负责后端处理，将收到的数据利用redis_productor写入redis，redis_consumer负责将redis里面的数据写入mongodb

利用python3.5 curio模块实现异步tcp服务器
利用python3.5 asyncio_redis模块redis异步操作

利用curio设置超时

tornado.gen.with_timeout 设置future超时

需求整理

1.上传数据
json格式 Method键的值为pushDatas
上传成功 服务器需要回复通知终端数据已经上传成功了

2.请求控制数据
json格式 Method键的值为pullParams
服务器按照一定格式回复控制信息
终端收到控制之后回复paramsUpdated
控制信息更新成功

3.时间同步
json格式 Method键的值为pullTime
服务器回复毫秒值

4.上传图像
json格式 Method键的值为pushImage，另外信息里面还包括要传的图像的字节大小
服务器回复pushImageReady表示服务器准备好接受图片
终端不断的发送512个字节一包的数据，直到发完
服务器回复imageUploaded